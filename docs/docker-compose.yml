version: "3.8"
services:
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    networks:
      - webnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  nginx:
    build: $PWD/../nginx
    volumes:
      - $PWD/../vulcan-react/build:/usr/share/nginx/html:ro
      - $PWD/../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /$PWD/../vulcan-react/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
    networks:
      - webnet
    depends_on:
      - mercury
      - redis
      - mongo
      - nats
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://mercury:6001/health"]
      interval: 5s
      timeout: 30s
      retries: 10
  vulcan:
    tty: true
    stdin_open: true
    build:
      context: $PWD/../vulcan-react
    volumes:
      - $PWD/../vulcan-react:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5000:5000
    networks:
      - webnet
    depends_on:
      - redis
      - mongo
      - mercury
  storybook:
    tty: true
    stdin_open: true
    build:
      context: $PWD/../vulcan-react
    entrypoint: ["yarn", "run", "storybook"]
    volumes:
      - $PWD/../vulcan-react:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 6006:6006
    networks:
      - webnet
  mercury:
    build:
      context: $PWD/../mercury
      target: development
    volumes:
      - $PWD/../mercury:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 6001:6001
      - 9229:9229
    command: npm run start:dev
    networks:
      - webnet
    depends_on:
      - redis
      - mongo
  redis:
    image: redis:alpine
    # command: redis-server --requirepass INSECURE
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - $PWD/../redis/data:/var/lib/redis
      - $PWD/../redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - webnet
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=INSECURE
    volumes:
      - $PWD/../mongo/data:/data/db
    networks:
      - webnet
  nats-ui:
    image: sphqxe/nats-webui:latest
    ports:
      - "8087:80"
    networks:
      - webnet
    depends_on: ["nats"]
  nats:
    image: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - webnet
  nats-1:
    image: nats
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    networks:
      - webnet
    depends_on: ["nats"]
  nats-2:
    image: nats
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    networks:
      - webnet
    depends_on: ["nats"]
  nats-streaming:
    image: nats-streaming
    networks:
      - webnet

networks:
  webnet:
    name: webnet

volumes:
  portainer_data:
